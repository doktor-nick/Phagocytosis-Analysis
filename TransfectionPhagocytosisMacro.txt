
// inputs are brightfield and two fluorescent images
 
// (c) Dr Nick 2010, n.hamilton@imb.uq.edu.au

minCountPercent = 5;
maxCountPercent = 95;

title = "WaitForThreshold";
msg = "Image Order:\n   Brightfield\n   Beads\n   Transfected";
waitForUser(title, msg);

// bright field image first
open();
brightField = getTitle();

// then beads image
open();
beadsImg = getTitle();

// transfected cell image
open();
transImg = getTitle();

folder = getDirectory("image");

run("Set Scale...", "distance=0 known=0 pixel=1 unit=pixel global");


// make the mask 
selectWindow(transImg);
run("8-bit");
run("Threshold...");
setThreshold(115, 255);

title = "WaitForThreshold";
msg = "Adjust the threshold (defaut 115-255), apply, close threshold window, then click OK";
waitForUser(title, msg);

selectWindow(transImg);
run("Analyze Particles...", "size=400-infinity circularity=0-1.00 show=Masks include");

selectWindow(transImg);
close();
selectWindow("Mask of "+transImg);

run("Create Selection");
run("Enlarge...", "enlarge=15");
roiManager("Add");
selectWindow("Mask of "+transImg);
close();

selectWindow(brightField);
run("8-bit");
roiManager("Select", 0);
run("Colors...", "foreground=black background=white selection=magenta");
run("Make Inverse");
run("Fill", "slice");
roiManager("Delete");
run("Select None");

selectWindow(brightField);
run("Threshold...");
setThreshold(115, 255);

title = "WaitForThreshold";
msg = "Adjust the threshold (defaut 115-255), apply, close threshold window, then click OK";
waitForUser(title, msg);

run("Convert to Mask");
run("Make Binary", "thresholded remaining black");

run("Analyze Particles...", "size=10-80 circularity=0.80-1.00 show=Masks display exclude clear add");

selectWindow("Mask of "+brightField);

nROIs = nResults;

run("Clear Results");
selectWindow(beadsImg);
run("8-bit");
run("Set Measurements...", "area mean standard centroid redirect=None decimal=5");

for (i=0; i < nROIs; i++){
   selectWindow(beadsImg);
   roiManager("select",i);
   run("Enlarge...", "enlarge=4 pixel");
   run("Measure");
}

selectWindow("Results");
save(folder+beadsImg+"_intensities.txt");
run("Clear Results");

selectWindow(beadsImg);
run("8-bit");
run("Threshold...");
setThreshold(30, 255);

title = "WaitForThreshold";
msg = "Adjust the threshold (defaut 30-255), apply, close threshold window, then click OK";
waitForUser(title, msg);
selectWindow(beadsImg);
run("Convert to Mask");
run("Make Binary", "thresholded remaining black");

run("Set Measurements...", "area mean centroid redirect=None decimal=5");

count = 0;
count255 = 0;
for (i=0; i < nROIs; i++){
   selectWindow(beadsImg);
   roiManager("select",i);
   run("Enlarge...", "enlarge=4 pixel");
   run("Measure");
   m = getResult("Mean");
   if (m < ((minCountPercent*255)/100)) {count++;}
   if (m > ((maxCountPercent*255)/100)) {count255++;}
}
IB = nROIs - count - count255;

print("Of "+nROIs+" there are "+count+" phagocytosed (at most "+minCountPercent+" percent outside)");
print("Of "+nROIs+" there are "+count255+" outside (at least "+maxCountPercent+" percent outside)");
print("In between: "+IB);

selectWindow("Results");
save(folder+beadsImg+"_areas.txt");

selectWindow(brightField);
close();
selectWindow(beadsImg);
save(folder+beadsImg+"_mask.tif");
close();
selectWindow("Mask of "+brightField);
save(folder+brightField+"_mask.tif");
close();

nROIs = roiManager("count");
for (i=0; i < nROIs; i++){
 roiManager("Delete");
}
